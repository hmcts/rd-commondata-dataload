plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.springframework.boot' version '3.2.0'
  id 'com.github.ben-manes.versions' version '0.50.0'
  id 'org.sonarqube' version '4.4.1.3373'
  id "org.flywaydb.flyway" version "9.22.3"
  id "info.solidsoft.pitest" version '1.15.0'
  id 'uk.gov.hmcts.java' version '0.12.52'
  id 'org.owasp.dependencycheck' version '9.0.4'
}

application {
  getMainClass().set('uk.gov.hmcts.reform.rd.commondata.CommonDataLoadApplication')
}
def jarName = 'rd-commondata-dataload.jar'

group = 'uk.gov.hmcts.reform.rd'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

tasks.withType(Copy).all { duplicatesStrategy 'exclude' }

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task fortifyScan(type: JavaExec)  {
  getMainClass().set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  ignoreExitValue = true
}

pmd {
  toolVersion = "6.53.0"
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ignoreFailures = true
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacoco {
  toolVersion = "0.8.11"
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

pitest {
  junit5PluginVersion = '0.15'
  targetClasses = ['uk.gov.hmcts.reform.rd.commondata.*']
  testSourceSets = [sourceSets.test, sourceSets.functionalTest]
  excludedClasses = [
    'uk.gov.hmcts.reform.rd.commondata.configuration.*',
    'uk.gov.hmcts.reform.rd.commondata.CommonDataLoadApplication',
    'uk.gov.hmcts.reform.rd.commondata.camel.util.CommonDataExecutor',
    'uk.gov.hmcts.reform.rd.commondata.camel.binder.*',
    'uk.gov.hmcts.reform.rd.commondata.camel.task.CommonDataCaseLinkingRouteTask'
  ]
  threads = 6
  enableDefaultIncrementalAnalysis = true
  historyInputLocation = 'build/reports/pitest/fastermutationtesting'
  historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  mutationThreshold = 85
  useClasspathFile = true
}
project.tasks['pitest'].group = "Verification"
project.tasks['sonarqube'].group = "Verification"
project.tasks['sonarqube'].dependsOn test,jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "RD :: Common Data load"
    property "sonar.projectKey", "RDCOMMONDATALOAD"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"

    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/rd/commondata/configuration/**," +
      "src/main/java/uk/gov/hmcts/reform/rd/commondata/CommonDataLoadApplication.java," +
      "src/main/java/uk/gov/hmcts/reform/rd/commondata/camel/task/CommonDataCaseLinkingRouteTask.java,"+
      "src/main/java/uk/gov/hmcts/reform/rd/commondata/camel/binder/**,"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://jitpack.io'
  }
}

def versions = [
  junit               : '5.10.1',
  junitPlatform       : '1.10.1',
  reformLogging       : '6.0.1',
  springfoxSwagger    : '2.9.2',
  serenity            : '2.2.12',
  lombok              : '1.18.30',
  gradlePitest        : '1.5.1',
  pitest              : '1.15.0',
  flyway              : '9.22.3',
  log4j               : '2.22.0',
  logback             : '1.4.14',
  bouncycastle        : '1.77',
  springHystrix       : '2.2.10.RELEASE',
  camel               : '4.3.0',
  sshd                : '2.11.0',
  testContainer_postgresql: '1.17.6'
]

ext {
  springCloudVersion = '2023.0.0'
  camelVersion = '4.3.0'
}

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]

dependencyManagement {
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: versions.bouncycastle
    dependencySet(group: 'com.google.guava', version: '30.1.1-jre') {
      entry 'guava'
    }

    // CVE-2023-28709
    dependencySet(group: 'org.apache.tomcat.embed', version: '10.1.16') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }

    //CVE-2022-40152
    dependencySet(group: 'com.fasterxml.woodstox', version: '6.5.1') {
      entry 'woodstox-core'
    }
    //CVE-2023-24998
    dependencySet(group: 'commons-fileupload', version: '1.5') {
      entry 'commons-fileupload'
    }
  }
}

dependencies {
  implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-web'){
    exclude group: 'org.glassfish', module: 'jakarta.el'
  }

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

  implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger

  implementation "com.github.hmcts.java-logging:logging:${versions.reformLogging}"
  implementation "com.github.hmcts.java-logging:logging-appinsights:${versions.reformLogging}"
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-server'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch'


  // Fix for CVE-2022-45047, CVE-2023-35887
  implementation group: 'org.apache.sshd', name: 'sshd-common', version: versions.sshd
  implementation group: 'org.apache.sshd', name: 'sshd-core', version: versions.sshd
  implementation group: 'org.apache.sshd', name: 'sshd-osgi', version: versions.sshd
  implementation group: 'org.apache.sshd', name: 'sshd-sftp', version: versions.sshd

  implementation ('com.github.hmcts:properties-volume-spring-boot-starter:0.1.1'){
    exclude group: 'org.glassfish', module: 'jakarta.el'
  }

  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
  implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4j
  implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.16.0', ext: 'pom'
  implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.10.9'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.0'

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  implementation group: 'org.springframework.security', name: 'spring-security-core'
  implementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: versions.bouncycastle
  implementation ('com.github.hmcts:data-ingestion-lib:0.6.0.0-beta-10') {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
    exclude group: 'org.glassfish', module: 'jakarta.el'
  }
  implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
  implementation group: 'org.flywaydb', name: 'flyway-core', version: versions.flyway
  implementation group: 'jakarta.el', name: 'jakarta.el-api', version: '5.0.0'
  implementation group: 'org.glassfish.expressly', name: 'expressly', version: '5.0.0'

  //Fix for CVE-2021-29425
  implementation 'commons-io:commons-io:2.15.1'
  implementation group: 'org.apache.camel.springboot', name: 'camel-spring-boot-starter'
  implementation group: 'org.apache.camel.springboot', name: 'camel-spring-jdbc-starter'

  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'

  implementation group: 'org.springframework', name: 'spring-core'

 	implementation group: 'org.springframework', name: 'spring-beans'
  implementation group: 'org.springframework', name: 'spring-aop'
  implementation group: 'org.springframework', name: 'spring-aspects'
  implementation group: 'org.springframework', name: 'spring-context'
  implementation group: 'org.springframework', name: 'spring-context-support'
  implementation group: 'org.springframework', name: 'spring-expression'
  implementation group: 'org.springframework', name: 'spring-jcl'
  implementation group: 'org.springframework', name: 'spring-jdbc'
  implementation group: 'org.springframework', name: 'spring-orm'
  implementation group: 'org.springframework', name: 'spring-tx'
  implementation group: 'org.springframework', name: 'spring-web'
  implementation group: 'org.springframework', name: 'spring-webmvc'

  implementation group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
  implementation group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
  implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'

  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-test-autoconfigure'

  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.5.1'
  testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
  testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'

  testImplementation (group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity)
    {
      exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
      exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }
  testImplementation (group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity)
    {
      exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
      exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }
  testImplementation (group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity)
    {
      exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
      exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }
  testImplementation (group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity)
    {
      exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
      exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }

  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
  testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.15.0'
  testImplementation group: 'org.pitest', name: 'pitest-junit5-plugin', version: '0.16'

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  smokeTestImplementation sourceSets.test.runtimeClasspath

  testImplementation group: 'org.apache.camel', name: 'camel-test-spring-junit5', version: versions.camel
  testImplementation group: 'org.apache.camel', name: 'camel-test-junit5', version: versions.camel

  testImplementation group: 'org.testcontainers', name: 'postgresql', version: versions.testContainer_postgresql
  testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: versions.testContainer_postgresql
  testImplementation group: 'org.testcontainers', name: 'testcontainers', version: versions.testContainer_postgresql

  testImplementation group: 'org.springframework.batch', name: 'spring-batch-test', version: '5.1.0'
  testImplementation group: 'org.javatuples', name: 'javatuples', version: '1.2'
  implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'

  testImplementation group: 'org.postgresql', name: 'postgresql', version: '42.7.1'

  smokeTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  functionalTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  functionalTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
  functionalTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  functionalTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
  functionalTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

}

configurations.all {
  resolutionStrategy.eachDependency { details ->
    if (details.requested.group == 'org.bouncycastle'
      && (details.requested.name == 'bcpkix-jdk18on'
      || details.requested.name == 'bcprov-jdk18on')
    ){
      details.useVersion versions.bouncycastle
    }
  }

  exclude group: 'org.codehaus.jettison', module: 'jettison'
  exclude group: 'org.apache.groovy', module: 'groovy'
  exclude group: 'org.apache.groovy', module: 'groovy-xml'
  exclude group: 'org.apache.groovy', module: 'groovy-json'
}

dependencies {
  modules {
    module("org.bouncycastle:bcpkix-jdk15on") {
      replacedBy("org.bouncycastle:bcpkix-jdk18on")
    }
    module("org.bouncycastle:bcprov-jdk15on") {
      replacedBy("org.bouncycastle:bcprov-jdk18on")
    }
  }
}

gradle.startParameter.continueOnFailure = true

bootJar {
  archiveFileName = jarName

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}


wrapper {
  distributionType = Wrapper.DistributionType.ALL
}


// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed applications
application {
  applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

// Fix for CVE-2021-21295 & need to be removed with new Azure blob version
configurations.all {
  resolutionStrategy.eachDependency { details ->
    if (details.requested.group == 'io.netty'
      && (details.requested.name == 'netty-tcnative-boringssl-static'
          || details.requested.name == 'netty-tcnative-classes')
    ) {
      details.useVersion "2.0.62.Final"
    }
    if (details.requested.group == 'io.netty'
      && details.requested.name != 'netty-tcnative-boringssl-static'
      && details.requested.name != 'netty-tcnative-classes'
    ) {
      details.useVersion "4.1.100.Final"
    }

    // Fix for CVE-2023-36414 and CVE-2023-36415
    if (details.requested.group == 'com.azure'
      && details.requested.name == 'azure-identity'
    ) {
      details.useVersion "1.10.3"
    }

    if (//details.requested.group == 'com.fasterxml.jackson'
      details.requested.name == 'jackson-core'
      || details.requested.name == 'jackson-databind'
    ) {
      details.useVersion "2.15.2"
    }
  }
}

test {
  useJUnitPlatform()
}

functional {
  useJUnitPlatform()
}

integration {
  useJUnitPlatform()
}

dependencyManagement {
  dependencies {
    dependencySet(group: 'com.fasterxml.jackson.core', version: '2.14.2') {
      entry 'jackson-databind'
      entry 'jackson-core'
      entry 'jackson-annotations'
    }

    //        Resolves CVE-2023-4586
    dependencySet(group: 'io.netty', version: '4.1.104.Final') {
      entry 'netty-buffer'
      entry 'netty-codec'
      entry 'netty-codec-http'
      entry 'netty-codec-socks'
      entry 'netty-common'
      entry 'netty-handler'
      entry 'netty-handler-proxy'
      entry 'netty-resolver'
      entry 'netty-transport'
      entry 'netty-transport-native-unix-common'
    }
  }

  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    mavenBom "org.apache.camel.springboot:camel-spring-boot-bom:${camelVersion}"
  }
}
